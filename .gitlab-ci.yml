variables:
  # Set to true to skip tests
  SKIP_TESTS: "false"

stages:
  - test
  - trigger

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits-signoffs.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-python3-format.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:
  except:
    variables:
      - $SKIP_TESTS == "true"
  stage: test
  image: tiangolo/docker-with-compose
  services:
    - docker:19.03.5-dind
  before_script:
    - apk add --no-cache bash git openssl pwgen python3 jq
    - git config --global user.name "user"
    - git config --global user.email "user@example.com"
  script:
    - ./test_autoversion.py
    - ./autoversion.py --check
    - env TEST_OPEN_SOURCE=1 ./test_docs.py 07.Server-installation/03.Production-installation/docs.md
    - if [ -n "$REGISTRY_MENDER_IO_PASSWORD" ]; then
        docker login -u ntadm_menderci -p "$REGISTRY_MENDER_IO_PASSWORD" registry.mender.io;
      fi
    - if [ -n "$REGISTRY_MENDER_IO_PASSWORD" ]; then
        env TEST_ENTERPRISE=1 ./test_docs.py 07.Server-installation/03.Production-installation/docs.md;
      fi
    - if [ -n "$REGISTRY_MENDER_IO_PASSWORD" ]; then
        env TEST_ENTERPRISE=1 ./test_docs.py 07.Server-installation/03.Production-installation/01.Upgrading-from-OS-to-Enterprise/docs.md;
      fi

test:internal-links:
  stage: test
  image: node:14-alpine
  script:
    - apk add --no-cache git
    - npm install
    - ./checklinks --color --verbose

test:passive-voice:
    stage: test
    image: ubuntu
    script:
        - bash ./scripts/run-passive.sh

test:latest_versions:
  stage: test
  image: alpine
  before_script:
    - apk add --no-cache git python3 py3-pip openssh-client
    - pip3 install pyyaml
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | base64 -d | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "Host github.com" > ~/.ssh/config
    - echo "  StrictHostKeyChecking no" >> ~/.ssh/config
    - export MENDER_BINARY_DELTA_DIR=/tmp/mender-binary-delta
    - export INTEGRATION_REPO_DIR=/tmp/integration
    - export MENDER_CONVERT_DIR=/tmp/mender-convert
    - export MENDER_CLIENT_DIR=/tmp/mender-client
    - git clone git@github.com:mendersoftware/mender-binary-delta.git $MENDER_BINARY_DELTA_DIR
    - git clone https://github.com/mendersoftware/integration.git $INTEGRATION_REPO_DIR
    - git clone https://github.com/mendersoftware/mender-convert $MENDER_CONVERT_DIR
    - git clone https://github.com/mendersoftware/mender $MENDER_CLIENT_DIR
    - export INTEGRATION_VERSION=origin/staging
  script:
    - export MENDER_CLIENT_VERSION=$(cd $MENDER_CLIENT_DIR ; git tag | egrep -e '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V -r | head -n1)
    - export MENDER_CONVERT_VERSION=$(cd $MENDER_CONVERT_DIR ; git tag | egrep -e '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V -r | head -n1)
    - export MENDER_BINARY_DELTA_VERSION=$(cd $MENDER_BINARY_DELTA_DIR ; git tag | egrep -e '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V -r | head -n1)
    - ./autoversion.py
      --update
      --mender-convert-version $MENDER_CONVERT_VERSION
      --mender-convert-client-version $MENDER_CLIENT_VERSION
      --mender-binary-delta-version $MENDER_BINARY_DELTA_VERSION
      --integration-dir $INTEGRATION_REPO_DIR
      --integration-version $INTEGRATION_VERSION
    - git diff HEAD
    # exits with non zero status if not staged for commit files exist
    - git diff-index --quiet HEAD
  only:
    - /^(hosted)$/

trigger:mender-docs-site:
  image: alpine
  stage: trigger
  before_script:
    - apk add --no-cache curl
  script:
    - curl -v -f -X POST
      -F token=$MENDER_DOCS_SITE_TRIGGER_TOKEN
      -F ref=master
      https://gitlab.com/api/v4/projects/16842368/trigger/pipeline
    - curl -v -f -X POST
      -F token=$MENDER_DOCS_SITE_TRIGGER_TOKEN
      -F ref=production
      https://gitlab.com/api/v4/projects/16842368/trigger/pipeline
  only:
    - /^(master|hosted|[0-9]+\.[0-9]+\.x)$/
